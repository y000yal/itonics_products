<?php

require_once(drupal_get_path('module', 'yoyal_itonics_products') . '/yoyal_itonics_products_helper.php');

/**
 * Implements hook_init().
 */
function yoyal_itonics_products_init(): void
{
  // Get the path to your CSS file.
  $path = drupal_get_path('module', 'yoyal_itonics_products') . '/css/yoyal_itonics_style.css';
  drupal_add_css('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css', array('type' => 'external'));


  // Attach the CSS file.
  drupal_add_css($path, array('group' => CSS_THEME, 'type' => 'file'));
}

/**
 * Implements hook_menu() to define menu items.
 */
function yoyal_itonics_products_menu(): array
{
  $items = array();

  // List all products.
  $items['admin/products'] = array(
    'title' => 'Products',
    'description' => 'List of all products',
    'page callback' => 'yoyal_itonics_products_list_page',
    'access arguments' => array('administer_products'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Product detail page.
  $items['admin/products/%'] = array(
    'title' => 'Product details',
    'page callback' => 'yoyal_itonics_products_detail_page',
    'page arguments' => array(2),
    'access arguments' => array('administer_products'),
    'type' => MENU_CALLBACK,
  );

  // Add/Edit product page.
  $items['admin/products/add'] = array(
    'title' => 'Add Product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yoyal_itonics_products_add_form'),
    'access arguments' => array('administer_products'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Edit product page.
  $items['admin/products/%/edit'] = array(
    'title' => 'Edit Product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yoyal_itonics_products_edit_form', 2),
    'access arguments' => array('administer_products'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/products/%/delete'] = array(
    'title' => 'Delete Product', // Title for the link.
    'page callback' => 'drupal_get_form',
    'page arguments' => array('yoyal_itonics_products_delete_form', 2), // Arguments: yourmodule_product_delete_form and the product ID.
    'access callback' => 'user_access',
    'access arguments' => array('administer products'), // Replace with appropriate permission.
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function yoyal_itonics_products_delete_form($form, &$form_state, $product_id)
{
  // Add form elements here for delete confirmation.

  $product = YoyalItonicsProductsHelper::get_single_product($product_id);

  // Example confirmation message.
  $form['confirmation'] = array(
    '#markup' => '<p>Are you sure you want to delete product <b>' . $product['title'] . '</b>?</p>',
  );
  $form['pid'] = array(
    '#type' => 'value',
    '#value' => $product_id,
  );


  $form['delete'] = array(
    '#type' => 'submit',
    '#value' => 'Delete',
    '#submit' => array('yoyal_itonics_delete_product'), // Define the form submission handler.
  );

  // Additional form elements as needed.

  return $form;
}

function yoyal_itonics_delete_product($form, $form_state)
{
  $pid = $form_state['values']['pid'];
  $response = YoyalItonicsProductsHelper::delete_product($pid);
  if ($response) {
    drupal_set_message(t('Product has been deleted successfully.', array('%id' => $pid)));
  } else {
    drupal_set_message(t('Failed to delete product.', array('%id' => $pid)), 'error');
  }
  drupal_goto('admin/products');
}

/**
 * Form callback to add a new product.
 */
function yoyal_itonics_products_add_form($form, &$form_state)
{
  $categories = YoyalItonicsProductsHelper::get_category_list();

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#required' => TRUE,
  );

  $form['image'] = array(
    '#type' => 'file',
    '#title' => t('Image'),
    '#description' => t('Upload an image for the product.'),
    '#upload_validators' => array(
      'file_validate_extensions' => array('png gif jpg jpeg'), // Allowed file extensions
    )
  );

  $form['summary'] = array(
    '#type' => 'textarea',
    '#title' => t('Summary'),
    '#required' => TRUE,
  );

  $form['description'] = array(
    '#type' => 'text_format',
    '#title' => t('Description'),
    '#format' => 'filtered_html', // Use 'filtered_html' for a basic HTML input.
    '#required' => TRUE,
  );

  $form['category'] = array(
    '#type' => 'select',
    '#title' => t('Categories'),
    '#multiple' => TRUE, // Enable multiple selection.
    '#options' => $categories,
    '#attached' => array(
      'library' => array(
        'chosen/chosen.jquery', // Attach the Chosen library.
      ),
      'js' => array(
        drupal_get_path('module', 'yoyal_itonics_products') . '/js/custom.js', // Add JavaScript file to initialize Chosen.
      ),
    ),
    '#attributes' => array(
      'class' => array('chosen-select'), // Apply Chosen to this select field.
    ),
  );

  $form['type'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#options' => array(
      'type1' => 'Type 1',
      'type2' => 'Type 2',
      'type3' => 'Type 3',
      // Add more types as needed.
    ),
    '#required' => TRUE,
  );

  $form['owner_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Owner Email'),
    '#description' => t('Enter the owner\'s email address.'),
    '#required' => TRUE,
    '#element_validate' => array('yoyal_itonics_products_validate_email'), // Validate email format.
  );

  $form['expiry_date'] = array(
    '#type' => 'date',
    '#title' => t('Expiry Date'),
    '#date_format' => 'Y-m-d', // Date format: Year-month-day.
    '#description' => t('Select the expiry date for the product.'),
    '#prefix' => '<style>width: 100px</style>',
    '#required' => TRUE,
    '#attributes' => array(
      'class' => array('p-date'), // Apply Chosen to this select field.
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add Product'),
    '#submit' => array('yoyal_itonics_products_add_form_submit'), // Define the form submission handler.
  );

  $form['#attributes']['enctype'] = "multipart/form-data";

  return $form;

}

/**
 * Custom validation function for email field.
 */
function yoyal_itonics_products_validate_email($element, &$form_state, $form)
{
  // Get the submitted email value.
  $email = $element['#value'];

  // Validate the email format.
  if (!valid_email_address($email)) {
    form_error($element, t('Please enter a valid email address.'));
  }
}

/**
 * Form submission handler for saving product data.
 */
function yoyal_itonics_products_add_form_submit($form, &$form_state)
{
// Retrieve submitted values from the form.
  $values = $form_state['values'];

  $file = file_save_upload('image');
  $file_id = '';

  if ($file) {

    $file->status = FILE_STATUS_PERMANENT;
    $name_explode = explode('.', $file->filename);
    $name_explode[0] = $name_explode[0] . '-' . time();
    $file->filename = implode('.', $name_explode);

    $file_saved = file_save($file);
    // Set the destination directory.
    $destination = 'public://product_images/'; // Replace 'images/' with your desired directory.
    // File doesn't exist, move the uploaded file to the destination directory
    file_move($file_saved, $destination . $file_saved->filename);
    // Additional handling or processing if needed
    // Update the file URI to the new destination.
    $file_saved->uri = $destination . $file_saved->filename;
    $file_id = $file->fid;
    file_save($file_saved);
  }

// Begin a transaction.
  db_transaction();
  $product_detail = [
    'title' => $values['title'],
    'summary' => $values['summary'],
    'description' => $values['description']["value"],
    'type' => $values['type'],
    'owner_email' => $values['owner_email'],
    'expiry_date' => strtotime(implode('/', $values['expiry_date'])),
    'image' => $file_id
  ];
// Insert data into your custom table.

  try {

    $pid = YoyalItonicsProductsHelper::save_products($product_detail);
    YoyalItonicsProductsHelper::save_product_categories($values, $pid);
    db_transaction('commit');
  } catch (Exception $e) {

    // If an exception occurs, roll back the transaction to maintain data integrity.
    db_transaction('rollback');
    watchdog_exception('yoyal_itonics_products', $e); // Log the exception.
  }


  drupal_set_message(t('The product has been saved.'));

  $form_state['redirect'] = 'admin/products';

}

/**
 * Form callback to edit a product.
 */
function yoyal_itonics_products_edit_form($form, &$form_state, $pid)
{
  $product = YoyalItonicsProductsHelper::get_single_product($pid);

  $product_categories = YoyalItonicsProductsHelper::get_product_categories_ids($pid);
  $categories = YoyalItonicsProductsHelper::get_category_list();

  if (!empty($product['image'])) {
    $file = file_load($product['image']);
    $form['existing_image'] = array(
      '#markup' => theme('image_style', array(
        'style_name' => 'thumbnail',
        'path' => $file->uri,
        'alt' => 'Image Alt Text', // Replace with appropriate alt text.
        // Other attributes like 'title', 'width', 'height', etc., can be added as needed.
      )),
      '#title' => $file->filename,
    );
    $form['existing_image_name'] = array(
      '#markup' => '<p>Existing Image: ' . $file->filename . '</p>',
    );
  }

  $form['image'] = array(
    '#type' => 'file',
    '#title' => t('Upload New'),
    '#description' => t('Upload an image for the product.'),
    '#default_value' => (isset($file) && !empty($file)) ? $file : '',
    '#upload_validators' => array(
      'file_validate_extensions' => array('png gif jpg jpeg'), // Allowed file extensions
    )
  );

  $form['pid'] = array(
    '#type' => 'value',
    '#value' => $pid,
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#required' => TRUE,
    '#default_value' => $product['title']
  );

  $form['summary'] = array(
    '#type' => 'textarea',
    '#title' => t('Summary'),
    '#required' => TRUE,
    '#default_value' => $product['summary']
  );

  $form['description'] = array(
    '#type' => 'text_format',
    '#title' => t('Description'),
    '#format' => 'filtered_html', // Use 'filtered_html' for a basic HTML input.
    '#required' => TRUE,
    '#default_value' => $product['description']
  );

  $form['category'] = array(
    '#type' => 'select',
    '#title' => t('Categories'),
    '#multiple' => TRUE, // Enable multiple selection.
    '#options' => $categories,
    '#default_value' => $product_categories,
    '#attached' => array(
      'library' => array(
        'chosen/chosen.jquery', // Attach the Chosen library.
      ),
      'js' => array(
        drupal_get_path('module', 'yoyal_itonics_products') . '/js/custom.js', // Add JavaScript file to initialize Chosen.
      ),
    ),
    '#attributes' => array(
      'class' => array('chosen-select'), // Apply Chosen to this select field.
    ),
  );

  $form['type'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#default_value' => $product['type'],
    '#options' => array(
      'type1' => 'Type 1',
      'type2' => 'Type 2',
      'type3' => 'Type 3',
      // Add more types as needed.
    ),
    '#required' => TRUE,
  );

  $form['owner_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Owner Email'),
    '#description' => t('Enter the owner\'s email address.'),
    '#default_value' => $product['owner_email'],

    '#required' => TRUE,
    '#element_validate' => array('yoyal_itonics_products_validate_email'), // Validate email format.
  );

  $form['expiry_date'] = array(
    '#type' => 'date',
    '#title' => t('Expiry Date'),
    '#date_format' => 'Y-m-d', // Date format: Year-month-day.
    '#description' => t('Select the expiry date for the product.'),
    '#default_value' => array(
      'year' => date('Y', strtotime($product['expiry_date'])),
      'month' => date('m', strtotime($product['expiry_date'])),
      'day' => date('d', strtotime($product['expiry_date'])),
    ),
    '#prefix' => '<style>width: 100px</style>',
    '#required' => TRUE,
    '#attributes' => array(
      'class' => array('p-date'), // Apply Chosen to this select field.
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save Product'),
    '#submit' => array('yoyal_itonics_products_edit_form_submit'), // Define the form submission handler.
  );

  $form['#attributes']['enctype'] = "multipart/form-data";

  return $form;
}

function yoyal_itonics_products_edit_form_submit($form, &$form_state)
{

// Retrieve submitted values from the form.
  $values = $form_state['values'];

  $file = file_save_upload('image');

  $file_id = '';

  if ($file) {

    $file->status = FILE_STATUS_PERMANENT;
    $name_explode = explode('.', $file->filename);
    $name_explode[0] = $name_explode[0] . '-' . time();
    $file->filename = implode('.', $name_explode);

    $file_saved = file_save($file);
    // Set the destination directory.
    $destination = 'public://product_images/'; // Replace 'images/' with your desired directory.
    // File doesn't exist, move the uploaded file to the destination directory
    file_move($file_saved, $destination . $file_saved->filename);
    // Additional handling or processing if needed
    // Update the file URI to the new destination.
    $file_saved->uri = $destination . $file_saved->filename;
    $file_id = $file->fid;
    file_save($file_saved);
  } else {
    if (!empty($values['image'])) {
      $file_id = $values['image']->fid;
    }
  }


// Begin a transaction.
  db_transaction();
  $product_detail = [
    'title' => $values['title'],
    'summary' => $values['summary'],
    'description' => $values['description']["value"],
    'type' => $values['type'],
    'owner_email' => $values['owner_email'],
    'expiry_date' => strtotime(implode('/', $values['expiry_date'])),
    'image' => $file_id
  ];
// Insert data into your custom table.

  try {

    $pid = YoyalItonicsProductsHelper::edit_product($product_detail, $values['pid']);
    YoyalItonicsProductsHelper::edit_product_categories($values, $values['pid']);
    db_transaction('commit');
  } catch (Exception $e) {

    // If an exception occurs, roll back the transaction to maintain data integrity.
    db_transaction('rollback');
    watchdog_exception('yoyal_itonics_products', $e); // Log the exception.
  }


  drupal_set_message(t('The product has been saved.'));

  $form_state['redirect'] = 'admin/products';

}

function yoyal_itonics_products_list_page()
{
  $header = array(
    'ID' => t('ID'),
    'Image' => t('Image'),
    'Title' => t('Title'),
    'Owner Email' => t('Owner Email'),
    'Expiry Date' => t('Expiry Date'),
    'Action' => t('Action'), // Column for action buttons.
  );

  $rows = array();

  // Fetch and loop through your products data here.
  // Replace this with your actual data retrieval logic.
  $products = YoyalItonicsProductsHelper::get_products(); // Example function to get products.
  foreach ($products as $product) {

    $image = '';
    if (!empty($product['image'])) {
      $file = file_load($product['image']);

      // Generate the image HTML.
      $image = theme('image_style', array(
        'style_name' => 'thumbnail',
        'path' => $file->uri,
        'alt' => 'Image Alt Text', // Replace with appropriate alt text.
        // Other attributes like 'title', 'width', 'height', etc., can be added as needed.
      ));
    }
    $row = array(
      'id' => $product['pid'],
      'image' => $image,
      'title' => $product['title'],
      'owner_email' => $product['owner_email'],
      'expiry_date' => $product['expiry_date'],
      'action' => ''
    );
    $view_button = l(
      '<i class="fas fa-eye"></i>', // Font Awesome edit icon class.
      'admin/products/' . $product['pid'] . '/overlay', // Replace with your edit URL.
      array(
        'html' => TRUE,
        'attributes' => array('class' => array('view-button', 'ajax-overlay')),
      )
    );
    // Edit button with edit icon.
    $edit_button = l(
      '<i class="fas fa-edit"></i>', // Font Awesome edit icon class.
      'admin/products/' . $product['pid'] . '/edit', // Replace with your edit URL.
      array(
        'html' => TRUE,
        'attributes' => array('class' => array('edit-button')),
      )
    );
    $delete_button = l(
      '<i class="fas fa-trash-alt"></i>', // Font Awesome delete icon class.
      'admin/products/' . $product['pid'] . '/delete', // Replace with your delete URL.
      array(
        'html' => TRUE,
        'attributes' => array('class' => array('delete-button'))
      )
    );


    $row['action'] = $view_button . '  ' . $edit_button . ' ' . $delete_button;
    $rows[] = $row;
  }

  // Generate the table with action buttons.
  $output = theme('table', array('header' => $header, 'rows' => $rows));
  $output .= l('Add Product', 'admin/products/add', array(
    'attributes' => array(
      'class' => array('button'), // Adjust the class for styling if needed.
    ),
  ));
  return $output;
}


function yoyal_itonics_products_detail_page($pid) {
  $product = YoyalItonicsProductsHelper::get_single_product($pid);
  $categories = YoyalItonicsProductsHelper::get_all_categories($product['category']);
  if (!empty($product['image'])) {
    $file = file_load($product['image']);

    // Generate the image HTML.
    $image = theme('image_style', array(
      'style_name' => 'medium',
      'path' => $file->uri,
      'alt' => 'Image Alt Text', // Replace with appropriate alt text.
      // Other attributes like 'title', 'width', 'height', etc., can be added as needed.
    ));
  }
  // Build the HTML markup for displaying product details
  $output = '<div class="product-details">';
  $output .= '<div class="product-content">';
// Display Image
  if (!empty($product['image'])) {
    $output .= '<div class="product-details-left">';
    $output .= $image;
    $output .= '</div>';
  }
  // Display Details
  $output .= '<div class="product-details-right">';
  $output .= '<div class="p-top">';

  $output .= '<h1>' . check_plain($product['title']) . '</h1>';
  $output .= '<p>' . check_plain($product['summary']) . '</p>';
  $output .= '<p>' . $product['description'] . '</p>';
  $output .= '<p><strong>Category:</strong> ';
  if (!empty($product['category'])) {
    foreach ($categories as $k => $category) {
      $output .= '<span class="product-category">' . ucwords($category['title']) . '</span> ';
    }
  }
  $output .= '</p>';


  $output .= '<p><strong>Type:</strong> ' . check_plain($product['type']) . '</p>';
  $output .= '</div>'; // Close product-details-left

  $output .= '<div class="p-bottom">';
  $output .= '<p><strong>Owner Email:</strong> ' . check_plain($product['owner_email']) . '</p>';

  $output .= '<p><strong>Expiry Date:</strong> ' . format_date(strtotime($product['expiry_date']), 'custom', 'Y-m-d') . '</p>';

  $output .= '</div>'; // Close product-details-left
  $output .= '</div>'; // Close product-details-left



  $output .= '</div>'; // Close product-content
  $output .= '</div>'; // Close product-details

  return $output;
}



?>
